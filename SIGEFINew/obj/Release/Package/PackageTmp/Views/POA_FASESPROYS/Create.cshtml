@model SIGEFINew.Models.POA.POA_FASESPROYS

@{
    if (ViewBag.EsNuevo == 1)
    {
        ViewBag.Title = "Nuevo";
    }
    else
    {
        ViewBag.Title = "Editar";
    }

}

@using (Html.BeginForm(new { @EsNuevo = ViewBag.EsNuevo }))
{
    @Html.AntiForgeryToken()
    <div class="col-md-9">
        <div class="box box-success">
            <div class="box-header with-border">
                <i class="glyphicon glyphicon-edit"></i>
                @if (ViewBag.EsNuevo == 1)
                {
                    <h3 class="box-title">Fase (Nuevo)</h3>
                }
                else
                {
                    <h3 class="box-title">Fase (Editar)</h3>
                }
            </div>

            <div class="box-body">
                @if (@ViewBag.MsgError != null)
                {
                    <div class="col-md-12">
                        <div class="alert alert-danger alert-dismissable">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">x</button>
                            <h4><i class="icon alert-danger"></i>Mensaje</h4>
                            @ViewBag.MsgError
                        </div>
                    </div>
                }
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.COD_PLAN, new { @Value = ViewBag.CodPlan })
                @Html.HiddenFor(model => model.ORG_CODIGO, new { @Value = ViewBag.OrgCodigo })
                @Html.HiddenFor(model => model.COD_PLANOBJTVO, new { @Value = ViewBag.CodPObtvo })

                @if (ViewBag.EsNuevo == 0)
                {
                    @Html.HiddenFor(model => model.COD_FASE)
                    @Html.HiddenFor(model => model.USER_MODIF, new { @Value = ViewBag.UserModif })
                    @Html.HiddenFor(model => model.FECHA_MODIF, new { @Value = ViewBag.FechaModif })
                }

                @Html.HiddenFor(model => model.ESTADO, new { @Value = ViewBag.Estado })

                @Html.HiddenFor(model => model.USER_CREA, new { @Value = ViewBag.UserCrea })
                @Html.HiddenFor(model => model.FECHA_CREA, new { @Value = ViewBag.FechaCrea })



                @*<div class="form-group">
            @Html.LabelFor(model => model.COD_PLAN, "COD_PLAN", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("COD_PLAN", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.COD_PLAN, "", new { @class = "text-danger" })
            </div>
        </div>*@

                @*<div class="form-group">
            @Html.LabelFor(model => model.ORG_CODIGO, "ORG_CODIGO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ORG_CODIGO", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ORG_CODIGO, "", new { @class = "text-danger" })
            </div>
        </div>*@

                @*<div class="form-group">
            @Html.LabelFor(model => model.COD_PLANOBJTVO, "COD_PLANOBJTVO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("COD_PLANOBJTVO", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.COD_PLANOBJTVO, "", new { @class = "text-danger" })
            </div>
        </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.FECHA, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FECHA, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.FECHA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.COD_CPTO, "Concepto", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.DropDownList("COD_CPTO", null, htmlAttributes: new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.COD_CPTO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.COD_INDICADOROJ, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.DropDownList("COD_INDICADOROJ", null, htmlAttributes: new { @class = "form-control input-sm" })
                        @*@Html.EditorFor(model => model.COD_INDICADOROJ, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.COD_INDICADOROJ, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DETALLE, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.DETALLE, new { @class = "form-control input-sm textarea-editor", placeholder = "Detalle (*)" })
                        @*@Html.TextAreaFor(model => model.DETALLE, new { htmlAttributes = new { @class = "form-control input-sm textarea-editor" } })*@
                        @Html.ValidationMessageFor(model => model.DETALLE, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VALOR, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.VALOR, new { htmlAttributes = new { @class = "form-control", min = "0" } })
                        @Html.ValidationMessageFor(model => model.VALOR, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DEVENGADO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.DEVENGADO, new { htmlAttributes = new { @class = "form-control", min = "1" } })
                        @Html.ValidationMessageFor(model => model.DEVENGADO, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
            @Html.LabelFor(model => model.ESTADO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ESTADO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ESTADO, "", new { @class = "text-danger" })
            </div>
        </div>*@
                <div class="col-md-offset-8 col-md-10">
                    @Html.ActionLink(" Cancelar", "Index", "", new { @class = "btn btn-warning" })
                    <button id="saveOrder" type="submit" class="btn btn-primary">
                        <span class="glyphicon glyphicon-ok"></span> Aceptar
                    </button>
                </div>

            </div>
            </div>
        </div>
    </div>

}

<script src="../../content/bower_components/jquery/dist/jquery.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>

<script>
    $('#DETALLE').keyup(function () {
        var datos = new String($('#DETALLE').val());
        datos = datos.toUpperCase(datos);
        $('#DETALLE').val(datos);
    })
</script>


