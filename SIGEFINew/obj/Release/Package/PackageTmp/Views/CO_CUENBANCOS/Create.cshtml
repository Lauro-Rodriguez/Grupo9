@model SIGEFINew.Models.Contabilidad.CO_CUENBANCOS

@{
    if (ViewBag.EsNuevo == 1)
    {
        ViewBag.Title = "Nuevo";
    }
    else
    {
        ViewBag.Title = "Editar";
    }

}

@using (Html.BeginForm(new { @EsNuevo = ViewBag.EsNuevo }))
{
    <div class="container">
        @Html.AntiForgeryToken()
        <div class="box box-success">
            <div class="box-header with-border">
                <i class="glyphicon glyphicon-edit"></i>
                @if (ViewBag.EsNuevo == 1)
                {
                    <h3 class="box-title">Cuentas Bancarias (Nuevo)</h3>
                }
                else
                {
                    <h3 class="box-title">Cuentas Bancarias (Editar)</h3>
                }
            </div>

            <div class="box-body">
                @if (@ViewBag.MsgError != null)
                {
                    <div class="col-md-12">
                        <div class="alert alert-danger alert-dismissable">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">x</button>
                            <h4><i class="icon alert-danger"></i>Mensaje</h4>
                            @ViewBag.MsgError
                        </div>
                    </div>
                }
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.USER_CREA, new { @Value = ViewBag.UserCrea })
                    @Html.HiddenFor(model => model.FECHA_CREA, new { @Value = ViewBag.FechaCrea })

                    <div class="form-group">
                        @Html.LabelFor(model => model.CODIGO_CUENTA, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @if (ViewBag.EsNuevo == 1)
                            {
                                @Html.EditorFor(model => model.CODIGO_CUENTA, new { htmlAttributes = new { @class = "form-control", @Readonly = "readonly", @Value = 0 } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.CODIGO_CUENTA, new { htmlAttributes = new { @class = "form-control", @Readonly = "readonly" } })
                            }
                            @Html.ValidationMessageFor(model => model.CODIGO_CUENTA, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CODIGO_BANCO, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("CODIGO_BANCO", null, htmlAttributes: new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.CODIGO_BANCO, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CUENTA_CORRIENTE, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.CUENTA_CORRIENTE, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.CUENTA_CORRIENTE, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CODIGO_CG, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("CODIGO_CG", null, htmlAttributes: new { @class = "form-control select2 input-sm", @style = "width: 100%;" })
                            @*@Html.EditorFor(model => model.CODIGO_CG, new { htmlAttributes = new { @class = "form-control input-sm", list = "datalist1" } })*@
                            @Html.ValidationMessageFor(model => model.CODIGO_CG, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DESCRIPCION, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.DESCRIPCION, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.DESCRIPCION, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CONCILIA, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CONCILIA)
                                @Html.ValidationMessageFor(model => model.CONCILIA, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CTA_DEBITO, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("CTA_DEBITO", null, htmlAttributes: new { @class = "form-control select2 input-sm", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.CTA_DEBITO, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CTA_CREDITO, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("CTA_CREDITO", null, htmlAttributes: new { @class = "form-control select2 input-sm", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.CTA_CREDITO, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-offset-9 col-md-10">
                        @Html.ActionLink("Cancelar", "Index", "", new { @class = "btn btn-warning" })
                        <button type="submit" onclick="@("location.href='"+ Url.Action("Create","CO_CLASIFRETEN")+ "'")" class="btn btn-primary">
                            <span class="glyphicon glyphicon-ok"></span> Aceptar
                        </button>
                    </div>

                    @*Para llenar los campos de las Cuentas Contables*@
                </div>
            </div>
        </div>
    </div>

}

<script src="../../content/bower_components/jquery/dist/jquery.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>
<script>
    $('.select2').select2();

    $(document).ready(function () {
        var url = "@Url.Action("FillCuentasAux", "Funciones")";
            var data = {  }
             $.post(url, data).done(function(data) {
                 $.each(data, function (index, row) {
                     $("#datalist1").append("<option value='" + row.CODIGO_CG + "'>" + row.NOMBRE_CG + "</option>")
                });

            });
    });

</script>

@section Scripts{
    @*<script type="text/javascript" src="/Scripts/jquery.maskedinput.min.js"></script>
    <script type="text/javascript" src="/Scripts/jquery-1.8.3.min.js" charset="utf-8"></script>*@

    <script type="text/javascript">
        $('#DESCRIPCION').keyup(function () {
            var datos = new String($('#DESCRIPCION').val());
            datos = datos.toUpperCase(datos);
            $('#DESCRIPCION').val(datos);
        })
    </script>
}
