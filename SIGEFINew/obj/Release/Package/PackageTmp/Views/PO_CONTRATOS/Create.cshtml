@model SIGEFINew.Models.Contratacion.PO_CONTRATOS

@{
    if (ViewBag.EsNuevo == 1)
    {
        ViewBag.Title = "Nuevo";
    }
    else
    {
        ViewBag.Title = "Editar";
    }

}

@using (Html.BeginForm(new { @EsNuevo = ViewBag.EsNuevo }))
{
    @Html.AntiForgeryToken()
<div class="content">

    @* Información general del contrato *@
    <div class="box box-success">
        <div class="box-header with-border">
            <i class="glyphicon glyphicon-edit"></i>
            @if (@ViewBag.MsgError != null)
            {
                <div class="col-md-12">
                    <div class="alert alert-danger alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">x</button>
                        <h4><i class="icon alert-danger"></i>Mensaje</h4>
                        @ViewBag.MsgError
                    </div>
                </div>
            }
            @if (ViewBag.EsNuevo == 1)
            {
                <h3 class="box-title">Contratos (Nuevo)</h3>
            }
            else
            {
                <h3 class="box-title">Contratos (Editar)</h3>
            }
        </div>
        <div class="box-body">
            <div class="form-horizontal">

                @Html.HiddenFor(model => model.USER_CREA, new { @Value = ViewBag.UserCrea })
                @Html.HiddenFor(model => model.FECHA_CREA, new { @Value = ViewBag.FechaCrea })
                @Html.HiddenFor(model => model.TIPO_CONTRATO, new { @Value = "PR" })

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.COD_CONTRATO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @if (ViewBag.EsNuevo == 1)
                        {
                            @Html.EditorFor(model => model.COD_CONTRATO, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        }
                        else
                        {
                            @Html.EditorFor(model => model.COD_CONTRATO, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = true } })
                        }

                        @Html.ValidationMessageFor(model => model.COD_CONTRATO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DESC_CONTRATO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.DESC_CONTRATO, new { @class = "form-control input-sm textarea-editor", placeholder = "Descripción del contrato (*)" })
                        @Html.ValidationMessageFor(model => model.DESC_CONTRATO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NUM_CONTRATO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.NUM_CONTRATO, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.NUM_CONTRATO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.COD_PLANOBJTVO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.DropDownList("COD_PLANOBJTVO", null, htmlAttributes: new { @class = "form-control select2 input-sm" })
                        @*@Html.EditorFor(model => model.COD_PLANOBJTVO, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.COD_PLANOBJTVO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NUM_COMPROMISO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.DropDownList("NUM_COMPROMISO", null, htmlAttributes: new { @class = "form-control select2 input-sm" })
                        @Html.ValidationMessageFor(model => model.NUM_COMPROMISO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.COD_CONTRATISTA, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.DropDownList("COD_CONTRATISTA", null, htmlAttributes: new { @class = "form-control select2 input-sm" })
                        @Html.ValidationMessageFor(model => model.COD_CONTRATISTA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MONTO_REF, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.MONTO_REF, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.MONTO_REF, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MONTO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.MONTO, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.MONTO, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.CARGA_INI, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.CARGA_INI)
                            @Html.ValidationMessageFor(model => model.CARGA_INI, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* Plazos y fechas *@
    <div class="box box-info">
        <div class="box-header with-border">
            <i class="glyphicon glyphicon-calendar"></i>
            <h3 class="box-title">Plazos y Fechas</h3>

        </div>
        <div class="box-body">
            <div class="form-horizontal">
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FECHA_SUCRIP, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.FECHA_SUCRIP, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.FECHA_SUCRIP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="row">

                    <div class="form-group">
                        @Html.LabelFor(model => model.FECHA_INICIA, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.FECHA_INICIA, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.FECHA_INICIA, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.PLAZO_DIAS, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.PLAZO_DIAS, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.PLAZO_DIAS, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.FECHA_FINALIZA, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.FECHA_FINALIZA, new { htmlAttributes = new { @class = "form-control input-sm", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.FECHA_FINALIZA, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PLAZO_DIASAMP, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-1">
                                @Html.EditorFor(model => model.PLAZO_DIASAMP, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.PLAZO_DIASAMP, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.FECHA_FINALIZA2, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-4" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.FECHA_FINALIZA2, new { htmlAttributes = new { @class = "form-control input-sm", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.FECHA_FINALIZA2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NOMBRE_FISCALIZADOR, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.NOMBRE_FISCALIZADOR, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.NOMBRE_FISCALIZADOR, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NOMBRE_ADMINISTRADOR, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.NOMBRE_ADMINISTRADOR, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.NOMBRE_ADMINISTRADOR, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-5">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FECHA_RECPROV, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.FECHA_RECPROV, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.FECHA_RECPROV, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NUM_DOCRECPROV, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.NUM_DOCRECPROV, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.NUM_DOCRECPROV, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-5">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FECHA_RECDEFI, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.FECHA_RECDEFI, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.FECHA_RECDEFI, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NUM_DOCRECDEFI, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.NUM_DOCRECDEFI, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.NUM_DOCRECDEFI, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>

    @* Formas de pago *@
    <div class="box box-danger">
        <div class="box-header with-border">
            <i class="glyphicon glyphicon-transfer"></i>
            <h3 class="box-title">Formas de Pago</h3>

        </div>
        <div class="box-body">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.PORC_ANTICIPO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-1">
                        @Html.EditorFor(model => model.PORC_ANTICIPO, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.PORC_ANTICIPO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VALOR_ANTICIPO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.VALOR_ANTICIPO, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.VALOR_ANTICIPO, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.VALOR_ENTREGADO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.VALOR_ENTREGADO, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.VALOR_ENTREGADO, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        @*<div class="panel-heading">Cuentas por Cobrar</div>*@
        <div class="panel-body">
            <div class="col-md-offset-9 col-md-10">
                @Html.ActionLink(" Cancelar", "Index", "", new { @class = "btn btn-warning" })
                <button id="saveOrder" type="submit" class="btn btn-primary">
                    <span class="glyphicon glyphicon-ok"></span> Aceptar
                </button>
            </div>
        </div>
    </div>
</div>
   


    @*<div class="form-group">
            @Html.LabelFor(model => model.TIPO_CONTRATO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TIPO_CONTRATO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TIPO_CONTRATO, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.COD_CONTRATOP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.COD_CONTRATOP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COD_CONTRATOP, "", new { @class = "text-danger" })
            </div>
        </div>*@



    @*<div class="form-group">
            @Html.LabelFor(model => model.PDF_RECPRV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PDF_RECPRV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PDF_RECPRV, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PDF_RECDEF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PDF_RECDEF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PDF_RECDEF, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.USER_CREA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_CREA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.USER_CREA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FECHA_CREA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FECHA_CREA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FECHA_CREA, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.USER_MODIF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_MODIF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.USER_MODIF, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.FECHA_MODIF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FECHA_MODIF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FECHA_MODIF, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@

}


<script src="../../content/bower_components/jquery/dist/jquery.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>
<script>
    $('.select2').select2();

    $('#PLAZO_DIAS').change(function () {
        var TuFecha = new Date($('#FECHA_INICIA').val());
        var dias = parseInt($('#PLAZO_DIAS').val());

        TuFecha.setDate(TuFecha.getDate() + dias+1);

        var resultado = TuFecha.getFullYear()+'-'+
            pad((TuFecha.getMonth() + 1),2) + '-' + pad(TuFecha.getDate(),2);

        $('#FECHA_FINALIZA').val(resultado);

    })

        $('#PLAZO_DIASAMP').change(function () {
            var TuFecha2 = new Date($('#FECHA_FINALIZA').val());
            var dias2 = parseInt($('#PLAZO_DIASAMP').val());

            TuFecha2.setDate(TuFecha2.getDate() + dias2+1);

            var resultado2 = TuFecha2.getFullYear() + '-' +
                pad((TuFecha2.getMonth() + 1), 2) + '-' + pad(TuFecha2.getDate(), 2);

            $('#FECHA_FINALIZA2').val(resultado2);

        })
        

        function pad(str, max) {
            str = str.toString();
            return str.length < max ? pad("0" + str, max) : str;
        }


</script>
