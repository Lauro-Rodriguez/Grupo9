@model SIGEFINew.Models.Contabilidad.CO_DETCTASPPAG

@{
    ViewBag.Title = "Nuevo";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.COD_PROV, new { @Value = ViewBag.COD_PROV })
    @Html.HiddenFor(model => model.NUM_FILA)
    @Html.HiddenFor(model => model.TIPOSRI)
    @Html.HiddenFor(model => model.FECHA)
    @Html.HiddenFor(model => model.USER_CREA, new { @Value = ViewBag.UserCrea })
    @Html.HiddenFor(model => model.FECHA_CREA, new { @Value = ViewBag.FechaCrea })
<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.ID_INSTITUCION, "ID_INSTITUCION", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ID_INSTITUCION", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ID_INSTITUCION, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.PERI_CODIGO, "PERI_CODIGO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PERI_CODIGO", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PERI_CODIGO, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.NUM_TRANSAC, "NUM_TRANSAC", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NUM_TRANSAC", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NUM_TRANSAC, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.COD_PROV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.COD_PROV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.COD_PROV, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.NUM_FILA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NUM_FILA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NUM_FILA, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<div class="row">

    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.COD_TIPO_DOC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("COD_TIPO_DOC", null, htmlAttributes: new { @class = "form-control input-sm", @onchange = "TipoDoc(this.value ,id)" })
            @Html.ValidationMessageFor(model => model.COD_TIPO_DOC, "", new { @class = "text-danger" })
        </div>

    </div>
    @*<div class="form-group">
                @Html.LabelFor(model => model.TIPOSRI, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TIPOSRI, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    @Html.ValidationMessageFor(model => model.TIPOSRI, "", new { @class = "text-danger" })
                </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.FECHA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FECHA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FECHA, "", new { @class = "text-danger" })
            </div>
        </div>*@



    <div class="form-group">
        @Html.LabelFor(model => model.NUM_DOC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.NUM_DOC, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.NUM_DOC, "", new { @class = "text-danger" })
        </div>
         @Html.LabelFor(model => model.VALOR_DOC, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.VALOR_DOC, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.VALOR_DOC, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.VALOR_DOC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VALOR_DOC, new { htmlAttributes = new { @class = "form-control inout-sm" } })
            @Html.ValidationMessageFor(model => model.VALOR_DOC, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.IVA_PORC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.IVA_PORC, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.IVA_PORC, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.TOT_IVA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.TOT_IVA, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TOT_IVA, "", new { @class = "text-danger" })
        </div>
         @Html.LabelFor(model => model.TOTAL, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.TOTAL, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TOTAL, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.TOT_IVA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TOT_IVA, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TOT_IVA, "", new { @class = "text-danger" })
        </div>
    </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.TOTAL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TOTAL, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TOTAL, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.CTA_X_PAG, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-9">
            @Html.DropDownList("CTA_X_PAG", null, htmlAttributes: new { @class = "form-control input-sm select2" })
            @Html.ValidationMessageFor(model => model.CTA_X_PAG, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CTA_DEBITO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-9">
            @Html.DropDownList("CTA_DEBITO", null, htmlAttributes: new { @class = "form-control input-sm select2" })
            @Html.ValidationMessageFor(model => model.CTA_DEBITO, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.ASIENTO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ASIENTO, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.ASIENTO, "", new { @class = "text-danger" })
            </div>
        </div>*@

<div class="row">
    <div class="form-group">
        @Html.LabelFor(model => model.RFIVA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            <div class="checkbox">
                @Html.EditorFor(model => model.RFIVA)
                @Html.ValidationMessageFor(model => model.RFIVA, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.AD, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-1">
            <div class="checkbox">
                @Html.EditorFor(model => model.AD)
                @Html.ValidationMessageFor(model => model.AD, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.IG, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-1">
            <div class="checkbox">
                @Html.EditorFor(model => model.IG)
                @Html.ValidationMessageFor(model => model.IG, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
    

    @*<div class="form-group">
            @Html.LabelFor(model => model.PORC_APLICA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PORC_APLICA, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.PORC_APLICA, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.AD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.AD)
                @Html.ValidationMessageFor(model => model.AD, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.IG, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IG)
                @Html.ValidationMessageFor(model => model.IG, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.AUTORIZACION, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.AUTORIZACION, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.AUTORIZACION, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.FECHA_DOC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.FECHA_DOC, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.FECHA_DOC, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.FECHACAD_DOC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.FECHACAD_DOC, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.FECHACAD_DOC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.REPOSICION, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.REPOSICION, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.REPOSICION, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.ICE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.ICE, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.ICE, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.ICE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.ICE, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.ICE, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <!--<div class="form-group">
        @Html.LabelFor(model => model.COD_SUSTENTO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("COD_SUSTENTO", null, htmlAttributes: new { @class = "form-control input-sm select2" })-->
            @*@Html.EditorFor(model => model.COD_SUSTENTO, new { htmlAttributes = new { @class = "form-control input-sm" } })*@
            <!--@Html.ValidationMessageFor(model => model.COD_SUSTENTO, "", new { @class = "text-danger" })
        </div>
    </div>-->

    @*<div class="form-group">
            @Html.LabelFor(model => model.TIPO_MOV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TIPO_MOV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TIPO_MOV, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.APLICADO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.APLICADO)
                    @Html.ValidationMessageFor(model => model.APLICADO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.ANULADO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ANULADO)
                    @Html.ValidationMessageFor(model => model.ANULADO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.NUMT_CONTAB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NUMT_CONTAB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NUMT_CONTAB, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
        @Html.LabelFor(model => model.FORMA_PAGO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("FORMA_PAGO", null, htmlAttributes: new { @class = "form-control input-sm select2" })
            @Html.ValidationMessageFor(model => model.FORMA_PAGO, "", new { @class = "text-danger" })
        </div>
    </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.ORIGEN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORIGEN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORIGEN, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.ANTICIPO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ANTICIPO)
                    @Html.ValidationMessageFor(model => model.ANTICIPO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.TM_FDO_TER, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TM_FDO_TER)
                    @Html.ValidationMessageFor(model => model.TM_FDO_TER, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.NUM_FDO_TER, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NUM_FDO_TER, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NUM_FDO_TER, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.USER_CREA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_CREA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.USER_CREA, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.FECHA_CREA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FECHA_CREA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FECHA_CREA, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.USER_MODIF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_MODIF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.USER_MODIF, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.FECHA_MODIF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FECHA_MODIF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FECHA_MODIF, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        <div class="col-md-offset-8 col-md-10">
            <button onclick="Aceptar(1,@ViewBag.EsNuevo)" type="button" class="btn btn-success btn-sm" data-toggle="tooltip" title="Aceptar">
                <span class="fa fa-check"></span>
            </button>
            <button onclick="Cancelar(1,@ViewBag.EsNuevo)" type="button" class="btn btn-danger btn-sm" data-toggle="tooltip" title="Cancelar">
                <span class="fa fa-remove"></span>
            </button>
        </div>
    </div>
    
    
    @*<div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>*@

    @*<div class="modal-footer">
        <button type="reset" class="btn btn-default" data-dismiss="modal">Cancelar</button>
        <button id="saveOrder" type="submit" class="btn btn-success">Guardar</button>
    </div>*@
</div>
}
@*<a id="COD_TIPO_DOC" class="btn btn-success btn-xs">Nuevo</a>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@*<script src="../../content/bower_components/jquery/dist/jquery.min.js"></script>*@
@*<script src="~/Scripts/select2.min.js"></script>*@
<script>
    //$('.select2').select2();

    $("#VALOR_DOC").focusout(function () {
        Total();
    });

    $("#IVA_PORC").focusout(function () {
        Total();
    });

    function Total() {
        var ValorDoc = $("#VALOR_DOC").val();
        var PorcIva = $("#IVA_PORC").val();

        var ValIVA = (ValorDoc * PorcIva / 100);

        var Total = parseFloat(ValorDoc) + parseFloat(ValIVA);

        $("#TOT_IVA").val(ValIVA);
        $("#TOTAL").val(Total);
    }

    $("#CTA_X_PAG").change(function () {
        CargaCuentasDebito();
    });

    //Proceso de Carga de Cuentas de Débito
    function CargaCuentasDebito() {
        var progcod = $("#CTA_X_PAG").val();
        var url = "@Url.Action("LLenaCuentasDebito", "Funciones")";
        var data = { CodCta: progcod }
        $("#CTA_DEBITO").empty();
        $.post(url, data).done(function(data) {
              $.each(data, function (index, row) {
                  $("#CTA_DEBITO").append("<option value='" + row.CODIGO_CG + "'>" + row.NOMBRE_CG + "</option>")
              });

        });
    }

    var RfI = false;
    var ADir = false;
    var IGto = false;
    $("#RFIVA").on("click", function () {
        if (this.checked) {
            RfI = true;
            }
            else {
            RfI = false;
         }

    });
    $("#AD").on("click", function () {
        if (this.checked) {
            ADir = true;
        }
        else {
            ADir = false;
        }

    });

    $("#IG").on("click", function () {
        if (this.checked) {
            IGto = true;
        }
        else {
            IGto = false;
        }

    });
</script>