@model SIGEFINew.Models.Nomina.RP_TIPOROL

@{
    if (ViewBag.EsNuevo == 1)
    {
        ViewBag.Title = "Nuevo";
    }
    else
    {
        ViewBag.Title = "Editar";
    }

}
<br />
<br />
@if (@ViewBag.MsgError != null)
{
    <div class="col-md-12">
        <div class="alert alert-danger alert-dismissable">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">x</button>
            <h4><i class="icon alert-danger"></i>Mensaje</h4>
            @ViewBag.MsgError
        </div>
    </div>
}

@using (Html.BeginForm(new { @EsNuevo = ViewBag.EsNuevo }))
{
    @Html.AntiForgeryToken()
    List<SIGEFINew.ViewModels.AsignaProductos> Productos = ViewBag.Prods;
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container">
            <div class="box box-success">
                <div class="box-header with-border">
                    <i class="glyphicon glyphicon-edit"></i>
                    @if (ViewBag.EsNuevo == 1)
                    {
                        <h3 class="box-title">Tipo de Rol (Nuevo)</h3>
                    }
                    else
                    {
                        <h3 class="box-title">Tipo de Rol (Editar)</h3>
                    }
                </div>
                <div class="box-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ID_TIPOROL, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @if (ViewBag.EsNuevo == 1)
                            {
                                @Html.EditorFor(model => model.ID_TIPOROL, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly", @Value = "0" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.ID_TIPOROL, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
                            }
                            @Html.ValidationMessageFor(model => model.ID_TIPOROL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DESCRIPCION, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.DESCRIPCION, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.DESCRIPCION, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SECCION, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("SECCION", null, htmlAttributes: new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.SECCION, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NUM_DIAS, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.NUM_DIAS, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.NUM_DIAS, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.COD_PROV, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("COD_PROV", null, htmlAttributes: new { @class = "form-control select2 input-sm", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.COD_PROV, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CODIGO_CG, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("CODIGO_CG", null, htmlAttributes: new { @class = "form-control select2 input-sm", @style = "width: 100%;" })
                            @Html.ValidationMessageFor(model => model.CODIGO_CG, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-offset-9 col-md-10">
                        @Html.ActionLink("Cancelar", "Index", "", new { @class = "btn btn-warning" })
                        <button type="submit" class="btn btn-primary">
                            <span class="glyphicon glyphicon-ok"></span> Aceptar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script src="../../content/bower_components/jquery/dist/jquery.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>

<script>
    $(document).ready(function () {
        $('.select2').select2();


    });


    $('#DESCRIPCION').keyup(function () {
        var datos = new String($('#DESCRIPCION').val());
        datos = datos.toUpperCase(datos);
        $('#DESCRIPCION').val(datos);
    })


</script>

